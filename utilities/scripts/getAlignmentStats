#!/bin/bash
#Developed by: Dr. Sreenu Vattipally at University of Glasgow


usage() { echo "Usage: $0 -1 file1.fq [-2 file2.fq] -b file.bam [-s file.sam]" 1>&2; exit 1; }

ont=0;

while getopts ":1:2:b:so" flags; do
    case "${flags}" in
        1) fq1=${OPTARG} ;;
        2) fq2=${OPTARG} ;;
        b) bam=${OPTARG} ;;
        s) sam=${OPTARG} ;;
        o) ont=1 ;;
        *) usage ;;
    esac
done
shift $((OPTIND-1))

#if [ -z "${1}" ] || [ -z "${b}" ]; then usage fi

if [ ! -f "$fq1" ]; then echo "$fq1 does not exist"; exit; fi
if [ ! -f "$fq2" ]; then
#	echo -e "No second fastq file. Assuming as Single-end";
	fq2_flag=1;
fi

# Get total reads
if [ ! $fq2_flag ]; then
	totalReads=$(awk 'END{print NR/2}' $fq1);
else
	totalReads=$(awk 'END{print NR/4}' $fq1);
fi

if [ -f "$bam" ]; then
	samtools sort $bam -o file-$$.bam &> /dev/null
elif [ -f "$sam" ]; then
	samtools view -bS $sam |samtools sort -o file-$$.bam &> /dev/null
fi


samtools index file-$$.bam &> /dev/null



mappedReads=$(samtools view -h -F 4 file-$$.bam|samtools view -F 0X800 |awk 'END{print NR+0}');

refName=$(samtools idxstats file-$$.bam|awk 'NR==1{print $1}');
refLength=$(samtools idxstats file-$$.bam|awk 'NR==1{print $(NF-2);}');

mappedReads30nt=$(samtools view -h file-$$.bam | awk -F '\t' '{ if ($1!~/^@/&&!and($2,0x4)&&!and($2,0x800)) { gsub(/[A-Z]/," & ",$6); n=split($6,a," "); mapped=0; for(i=0;i<=n;i++) if(a[i]=="M") mapped+=a[i-1]; if(mapped>=30) mappedReads+=1; } }; END{ print mappedReads+0; }' );


samtools depth -aa -d 1000000000 file-$$.bam > file-$$.depth

if [ $ont -eq 1 ]; then
#	refCoverage=$(awk '$NF< 20{i++};END{print NR-i;}' file-$$.depth);
	name=$(echo $bam|sed s/.sorted.bam//g);
	refCoverage=$(/home3/vatt01s/bin/GENOME_STATS $name.consensus.fasta |awk '$1=="A"||$1=="T"||$1=="G"||$1=="C"{i+=$2};END{print i+0}');
else
	refCoverage=$(awk '$NF< 10{i++};END{print NR-i;}' file-$$.depth);
fi

awk 'BEGIN{min=1000000000;max=0;}{if($NF>max)max=$NF; if($NF<min)min=$NF; depth+=$NF;};END{print (depth/NR)+0, min+0, max+0}'  file-$$.depth > file-$$.mm

aveDepth=$(awk '{print $1}' file-$$.mm);
minDepth=$(awk '{print $2}' file-$$.mm);
maxDepth=$(awk '{print $3}' file-$$.mm);

if [ $mappedReads -lt 1 ]; then
	#echo $totalReads $refName $refLength $refCoverage $aveDepth $minDepth $maxDepth $wrongTempLen|awk '{print $1,"0 0", $2,$3,"0 0 0 0 0 0 0"}';
	echo $totalReads $refName $refLength $refCoverage $aveDepth $minDepth $maxDepth|awk '{print $1,"0 0 0", $2,$3,"0 0 0 0 0"}';
else
	echo $totalReads $mappedReads $mappedReads30nt $refName $refLength $refCoverage $aveDepth $minDepth $maxDepth|awk '{print $1+0,$2+0,$3+0,(($2*100)/$1)+0,$4,$5,$6+0,(($6*100)/$5)+0, $7+0, $8+0, $9+0}';
fi

rm -f ?-$$ file-$$.*
